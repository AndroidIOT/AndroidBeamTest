buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
    }

    signingConfigs {
        release {
            if (System.console() != null) {
                //See: https://stackoverflow.com/questions/18328730/how-to-create-a-release-signed-apk-file-using-gradle
                // We can leave these in environment variables
                storeFile file(System.getenv("PERSONAL_KEYSTORE"))
                keyAlias System.getenv("PERSONAL_KEY_ALIAS")

                // These two lines make gradle believe that the signingConfigs
                // section is complete. Without them, tasks like installRelease
                // will not be available!
                storePassword "notYourRealPassword"
                keyPassword "notYourRealPassword"
            }
        }
    }

    buildTypes {
        release {
            runProguard true
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }
}

task askForPasswords << {
    // Must create String because System.readPassword() returns char[]
    // (and assigning that below fails silently)
    def storePw = new String(System.console().readPassword("Keystore password: "))
    def keyPw  = new String(System.console().readPassword("Key password: "))

    android.signingConfigs.release.storePassword = storePw
    android.signingConfigs.release.keyPassword = keyPw
}

tasks.whenTaskAdded { theTask -> 
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}